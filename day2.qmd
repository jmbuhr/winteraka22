---
title: "Day 2"
---

# Vormittag

```{r}
library(tidyverse)
library(gapminder)
library(gt)
```

```{r}
theme_set(
  theme_light() +
  theme(axis.text.x = element_text(face = "bold"))
)
```


## Tabellen

```{r}
gapminder
```


```{r}
if (knitr::is_html_output()) {
  rmarkdown::paged_table(gapminder)
} else {
  head(gapminder) |> 
    knitr::kable()
}
```

what if we want to be able to comment out any line in a set
of pipes?

```{r}
id <- function(x = NULL) x
```

```{r}
gapminder |>
  filter(year == max(year)) |>
  group_by(continent) |>
  summarise(across(c(lifeExp, pop, gdpPercap), mean)) |>
  knitr::kable() |>
  id()
```

Or in a ggplot?

```{r}
gapminder |>
  filter(year == max(year)) |>
  group_by(continent) |>
  ggplot(aes(continent, lifeExp)) +
  geom_point() +
  theme_classic() +
  coord_cartesian() +
  id()
```

more advanced `across`

```{r}
gapminder |>
  filter(year == max(year)) |>
  group_by(continent) |>
  summarise(across(c(lifeExp, pop, gdpPercap),
                   list(mean = mean, median = median,
                        sum = sum)))
```

```{r}
#| eval: false
id = \(x) mean(x, na.rm = TRUE)
~ mean(.x, na.rm = TRUE)
function(.x) {
  mean(.x, na.rm = TRUE)
}
```


```{r}
if (knitr::is_html_output()) {
  DT::datatable(gapminder)
}
```



```{r}
gapminder |>
  filter(year == max(year)) |>
  group_by(continent) |>
  summarise(across(c(lifeExp, pop, gdpPercap),
                   list(mean = mean, median = median,
                        sum = sum))) |> 
  gt() |> 
  tab_header(title = "Gapminder Dataset")
```

## Interactivity

### Plotly

```{r}
plt <- gapminder |> 
  ggplot(aes(year, lifeExp, color = country)) +
  geom_line() +
  guides(color = "none") +
  scale_color_manual(values = country_colors) +
  facet_wrap(~continent)
```

```{r}
if (knitr::is_html_output()) {
  plotly::ggplotly(plt)
} else {
  plt
}
```
```{r}
plt <- gapminder |> 
  filter(!(country %in% c("India", "China"))) |> 
  # select(continent, country, year, lifeExp, gdpPercap) |> 
  pivot_longer(c(lifeExp, gdpPercap, pop)) |> 
  ggplot(aes(year, value, color = country)) +
  facet_grid(name ~ continent, scales = "free") +
  geom_line() +
  guides(color = "none") +
  # scale_x_continuous(breaks = seq(1952, 2022, by = 20))
  scale_x_continuous(n.breaks = 3)

if (knitr::is_html_output()) {
  plotly::ggplotly(plt)
}
```

```{r}
N <- 100

df <- tibble(
  x = rnorm(N),
  y = rnorm(N),
  z = rnorm(N),
  value = sample(c("category 1", "category 2"), N, replace = TRUE)
)
```

```{r}
ggplot(df, aes(x, stat(density))) +
  geom_histogram() +
  geom_density()
```

```{r}
if (knitr::is_html_output()) {
  plotly::plot_ly(df,
                  x = ~ x,
                  y = ~ y,
                  z = ~ z,
                  color = ~ value)
}
```

## Itaration

```{r}
gapminder[1:5, 2:4]
x <- 1:10
x[3]
```

```{r}
lag(gapminder$lifeExp) |> head()
```

```{r}
gapminder |> 
  arrange(year) |> 
  group_by(country) |> 
  mutate(
    delta = lifeExp - lag(lifeExp)
  ) |>
  drop_na(delta) |>
  arrange(desc(abs(delta)))
```

```{r}
germany <- gapminder |> 
  filter(country == "Germany")

ggplot(germany, aes(year, lifeExp)) +
  geom_line() +
  geom_smooth(method = "lm")
```

```{r}
model <- lm(lifeExp ~ year, germany)
model
```

```{r}
model_summary <- summary(model)
model_summary
```

```{r}
model$coefficients
```

```{r}
broom::tidy(model)
```

```{r}
broom::glance(model)
```

```{r}
predict(model, newdata = list(year = 2100))

broom::augment(model)
```

```{r}
models <- gapminder |> 
  group_by(country) |> 
  arrange(year) |> 
  summarise(
    model = list(lm(lifeExp ~ year))
  ) |> 
  rowwise() |> 
  mutate(
    rsqrt = broom::glance(model)$r.squared
  )
```

```{r}
gapminder |> 
  left_join(models, by = "country") |> 
  ggplot(aes(year, lifeExp, color = country)) +
  geom_line(aes(alpha = 1/rsqrt)) +
  geom_line(aes(group = country),
            color = "black",
            data = ~ filter(.x, country == "Austria")) +
  guides(color = "none") +
  scale_color_manual(values = country_colors) +
  facet_wrap(~continent)
```

```{r}
gapminder |> 
  ggplot(aes(year, lifeExp, group = country)) +
  geom_line(aes(color = "black"))
```

```{r}
gapminder |> 
  ggplot(aes(year, lifeExp, group = country)) +
  geom_line(color = "black")
```

# Nachmittag


