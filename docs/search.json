[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "day2.html",
    "href": "day2.html",
    "title": "Tag 2",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gapminder)\nlibrary(palmerpenguins)\nlibrary(gt)\n\n\ntheme_set(\n  theme_light() +\n  theme(axis.text.x = element_text(face = \"bold\"))\n)\n\n\n\ngapminder\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\n\n\nif (knitr::is_html_output()) {\n  rmarkdown::paged_table(gapminder)\n} else {\n  head(gapminder) |> \n    knitr::kable()\n}\n\n\n\n  \n\n\n\nwhat if we want to be able to comment out any line in a set of pipes?\n\nid <- function(x = NULL) x\n\n\ngapminder |>\n  filter(year == max(year)) |>\n  group_by(continent) |>\n  summarise(across(c(lifeExp, pop, gdpPercap), mean)) |>\n  knitr::kable() |>\n  id()\n\n\n\ncontinent\nlifeExp\npop\ngdpPercap\n\n\n\nAfrica\n54.80604\n17875763\n3089.033\n\n\nAmericas\n73.60812\n35954847\n11003.032\n\n\nAsia\n70.72848\n115513752\n12473.027\n\n\nEurope\n77.64860\n19536618\n25054.482\n\n\nOceania\n80.71950\n12274974\n29810.188\n\n\n\n\n\nOr in a ggplot?\n\ngapminder |>\n  filter(year == max(year)) |>\n  group_by(continent) |>\n  ggplot(aes(continent, lifeExp)) +\n  geom_point() +\n  theme_classic() +\n  coord_cartesian() +\n  id()\n\n\n\n\nmore advanced across\n\ngapminder |>\n  filter(year == max(year)) |>\n  group_by(continent) |>\n  summarise(across(c(lifeExp, pop, gdpPercap),\n                   list(mean = mean, median = median,\n                        sum = sum)))\n\n# A tibble: 5 × 10\n  continent lifeExp_mean lifeExp_median lifeExp_sum  pop_mean pop_median pop_sum\n  <fct>            <dbl>          <dbl>       <dbl>     <dbl>      <dbl>   <dbl>\n1 Africa            54.8           52.9       2850.    1.79e7  10093310.  9.30e8\n2 Americas          73.6           72.9       1840.    3.60e7   9319622   8.99e8\n3 Asia              70.7           72.4       2334.    1.16e8  24821286   3.81e9\n4 Europe            77.6           78.6       2329.    1.95e7   9493598   5.86e8\n5 Oceania           80.7           80.7        161.    1.23e7  12274974.  2.45e7\n# … with 3 more variables: gdpPercap_mean <dbl>, gdpPercap_median <dbl>,\n#   gdpPercap_sum <dbl>\n\n\n\nid = \\(x) mean(x, na.rm = TRUE)\n~ mean(.x, na.rm = TRUE)\nfunction(.x) {\n  mean(.x, na.rm = TRUE)\n}\n\n\nif (knitr::is_html_output()) {\n  DT::datatable(gapminder)\n}\n\n\n\n\n\n\n\ngapminder |>\n  filter(year == max(year)) |>\n  group_by(continent) |>\n  summarise(across(c(lifeExp, pop, gdpPercap),\n                   list(mean = mean, median = median,\n                        sum = sum))) |> \n  gt() |> \n  tab_header(title = \"Gapminder Dataset\")\n\n\n\n\n\n\nGapminder Dataset\n    \n\ncontinent\n      lifeExp_mean\n      lifeExp_median\n      lifeExp_sum\n      pop_mean\n      pop_median\n      pop_sum\n      gdpPercap_mean\n      gdpPercap_median\n      gdpPercap_sum\n    \n\n\nAfrica\n54.80604\n52.9265\n2849.914\n17875763\n10093310\n929539692\n3089.033\n1452.267\n160629.70\n\n\nAmericas\n73.60812\n72.8990\n1840.203\n35954847\n9319622\n898871184\n11003.032\n8948.103\n275075.79\n\n\nAsia\n70.72848\n72.3960\n2334.040\n115513752\n24821286\n3811953827\n12473.027\n4471.062\n411609.89\n\n\nEurope\n77.64860\n78.6085\n2329.458\n19536618\n9493598\n586098529\n25054.482\n28054.066\n751634.45\n\n\nOceania\n80.71950\n80.7195\n161.439\n12274974\n12274974\n24549947\n29810.188\n29810.188\n59620.38\n\n\n\n\n\n\n\n\n\nplt <- gapminder |> \n  ggplot(aes(year, lifeExp, color = country)) +\n  geom_line() +\n  guides(color = \"none\") +\n  scale_color_manual(values = country_colors) +\n  facet_wrap(~continent)\n\n\nif (knitr::is_html_output()) {\n  plotly::ggplotly(plt)\n} else {\n  plt\n}\n\n\n\n\n\n\nplt <- gapminder |> \n  filter(!(country %in% c(\"India\", \"China\"))) |> \n  # select(continent, country, year, lifeExp, gdpPercap) |> \n  pivot_longer(c(lifeExp, gdpPercap, pop)) |> \n  ggplot(aes(year, value, color = country)) +\n  facet_grid(name ~ continent, scales = \"free\") +\n  geom_line() +\n  guides(color = \"none\") +\n  # scale_x_continuous(breaks = seq(1952, 2022, by = 20))\n  scale_x_continuous(n.breaks = 3)\n\nif (knitr::is_html_output()) {\n  plotly::ggplotly(plt)\n}\n\n\n\n\n\n\nN <- 100\n\ndf <- tibble(\n  x = rnorm(N),\n  y = rnorm(N),\n  z = rnorm(N),\n  value = sample(c(\"category 1\", \"category 2\"), N, replace = TRUE)\n)\n\n\nggplot(df, aes(x, stat(density))) +\n  geom_histogram() +\n  geom_density()\n\n\n\n\n\nif (knitr::is_html_output()) {\n  plotly::plot_ly(df,\n                  x = ~ x,\n                  y = ~ y,\n                  z = ~ z,\n                  color = ~ value)\n}\n\n\n\n\n\n\n\ngapminder[1:5, 2:4]\n\n# A tibble: 5 × 3\n  continent  year lifeExp\n  <fct>     <int>   <dbl>\n1 Asia       1952    28.8\n2 Asia       1957    30.3\n3 Asia       1962    32.0\n4 Asia       1967    34.0\n5 Asia       1972    36.1\n\nx <- 1:10\nx[3]\n\n[1] 3\n\n\n\nlag(gapminder$lifeExp) |> head()\n\n[1]     NA 28.801 30.332 31.997 34.020 36.088\n\n\n\ngapminder |> \n  arrange(year) |> \n  group_by(country) |> \n  mutate(\n    delta = lifeExp - lag(lifeExp)\n  ) |>\n  drop_na(delta) |>\n  arrange(desc(abs(delta)))\n\n# A tibble: 1,562 × 7\n# Groups:   country [142]\n   country   continent  year lifeExp       pop gdpPercap  delta\n   <fct>     <fct>     <int>   <dbl>     <int>     <dbl>  <dbl>\n 1 Rwanda    Africa     1992    23.6   7290203      737. -20.4 \n 2 Cambodia  Asia       1982    51.0   7272485      624.  19.7 \n 3 China     Asia       1967    58.4 754550000      613.  13.9 \n 4 Zimbabwe  Africa     1997    46.8  11404948      792. -13.6 \n 5 Rwanda    Africa     1997    36.1   7212583      590.  12.5 \n 6 Lesotho   Africa     2002    44.6   2046772     1275. -11.0 \n 7 Swaziland Africa     2002    43.9   1130269     4128. -10.4 \n 8 Botswana  Africa     1997    52.6   1536536     8647. -10.2 \n 9 Cambodia  Asia       1977    31.2   6978607      525.  -9.10\n10 Namibia   Africa     2002    51.5   1972153     4072.  -7.43\n# … with 1,552 more rows\n\n\n\ngermany <- gapminder |> \n  filter(country == \"Germany\")\n\nggplot(germany, aes(year, lifeExp)) +\n  geom_line() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\nmodel <- lm(lifeExp ~ year, germany)\nmodel\n\n\nCall:\nlm(formula = lifeExp ~ year, data = germany)\n\nCoefficients:\n(Intercept)         year  \n  -349.5415       0.2137  \n\n\n\nmodel_summary <- summary(model)\nmodel_summary\n\n\nCall:\nlm(formula = lifeExp ~ year, data = germany)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.84179 -0.18398 -0.00942  0.22152  0.59504 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -3.495e+02  1.378e+01  -25.37 2.07e-10 ***\nyear         2.137e-01  6.959e-03   30.71 3.15e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4161 on 10 degrees of freedom\nMultiple R-squared:  0.9895,    Adjusted R-squared:  0.9885 \nF-statistic: 942.9 on 1 and 10 DF,  p-value: 3.146e-11\n\n\n\nmodel$coefficients\n\n (Intercept)         year \n-349.5415110    0.2136832 \n\n\n\nbroom::tidy(model)\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept) -350.     13.8         -25.4 2.07e-10\n2 year           0.214   0.00696      30.7 3.15e-11\n\n\n\nbroom::glance(model)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC\n      <dbl>         <dbl> <dbl>     <dbl>    <dbl> <dbl>  <dbl> <dbl> <dbl>\n1     0.990         0.988 0.416      943. 3.15e-11     1  -5.41  16.8  18.3\n# … with 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n\n\n\npredict(model, newdata = list(year = 2100))\n\n       1 \n99.19324 \n\nbroom::augment(model)\n\n# A tibble: 12 × 8\n   lifeExp  year .fitted  .resid   .hat .sigma  .cooksd .std.resid\n     <dbl> <int>   <dbl>   <dbl>  <dbl>  <dbl>    <dbl>      <dbl>\n 1    67.5  1952    67.6 -0.0681 0.295   0.438 0.00795     -0.195 \n 2    69.1  1957    68.6  0.463  0.225   0.402 0.232        1.27  \n 3    70.3  1962    69.7  0.595  0.169   0.381 0.250        1.57  \n 4    70.8  1967    70.8  0.0266 0.127   0.438 0.000341     0.0685\n 5    71    1972    71.8 -0.842  0.0991  0.324 0.250       -2.13  \n 6    72.5  1977    72.9 -0.410  0.0851  0.415 0.0494      -1.03  \n 7    73.8  1982    74.0 -0.179  0.0851  0.434 0.00937     -0.449 \n 8    74.8  1987    75.0 -0.200  0.0991  0.433 0.0141      -0.507 \n 9    76.1  1992    76.1 -0.0455 0.127   0.438 0.000995    -0.117 \n10    77.3  1997    77.2  0.156  0.169   0.435 0.0172       0.412 \n11    78.7  2002    78.3  0.418  0.225   0.409 0.189        1.14  \n12    79.4  2007    79.3  0.0853 0.295   0.437 0.0125       0.244 \n\n\n\nmodels <- gapminder |> \n  group_by(country) |> \n  arrange(year) |> \n  summarise(\n    model = list(lm(lifeExp ~ year))\n  ) |> \n  rowwise() |> \n  mutate(\n    rsqrt = broom::glance(model)$r.squared\n  )\n\n\ngapminder |> \n  left_join(models, by = \"country\") |> \n  ggplot(aes(year, lifeExp, color = country)) +\n  geom_line(aes(alpha = 1/rsqrt)) +\n  geom_line(aes(group = country),\n            color = \"black\",\n            data = ~ filter(.x, country == \"Austria\")) +\n  guides(color = \"none\") +\n  scale_color_manual(values = country_colors) +\n  facet_wrap(~continent)\n\n\n\n\n\ngapminder |> \n  ggplot(aes(year, lifeExp, group = country)) +\n  geom_line(aes(color = \"black\"))\n\n\n\n\n\ngapminder |> \n  ggplot(aes(year, lifeExp, group = country)) +\n  geom_line(color = \"black\")"
  },
  {
    "objectID": "day2.html#advanced-quarto",
    "href": "day2.html#advanced-quarto",
    "title": "Tag 2",
    "section": "Advanced quarto",
    "text": "Advanced quarto\nhttps://quarto.org/"
  },
  {
    "objectID": "day2.html#reticulate",
    "href": "day2.html#reticulate",
    "title": "Tag 2",
    "section": "Reticulate",
    "text": "Reticulate\n\nlibrary(reticulate)\n\n\nmy_dataset <- palmerpenguins::penguins\nmy_vector <- 1:100\n\n\nxs = [x**2 for x in r.my_vector]\n\n\nall(py$xs == my_vector ^ 2)"
  },
  {
    "objectID": "day2.html#statistik",
    "href": "day2.html#statistik",
    "title": "Tag 2",
    "section": "Statistik",
    "text": "Statistik\np-values\n\npenguins |> \n  drop_na() |> \n  ggplot(aes(sex, bill_length_mm, color = species)) +\n  ggbeeswarm::geom_quasirandom()\n\n\n\n\n\npenguins |> \n  drop_na() |> \n  filter(species == \"Adelie\") |> \n  ggplot(aes(sex, bill_length_mm)) +\n  ggbeeswarm::geom_quasirandom()\n\n\n\n\nparametric\n\npenguins |>\n  drop_na() |>\n  filter(species == \"Adelie\") |>\n  ggplot(aes(bill_length_mm, fill = sex)) +\n  geom_density(alpha = 0.4)\n\n\n\n\nH_0 = The sex of the penguins does not have and influence on the bill length. All bill lengths come from the same distribution.\nH_1 = There is an influence.\nH_1a = There is an influence. And males have a longer bill.\n\nadelie <- penguins |>\n  drop_na() |>\n  filter(species == \"Adelie\")\n\nadelie\n\n# A tibble: 146 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           36.7          19.3               193        3450\n 5 Adelie  Torgersen           39.3          20.6               190        3650\n 6 Adelie  Torgersen           38.9          17.8               181        3625\n 7 Adelie  Torgersen           39.2          19.6               195        4675\n 8 Adelie  Torgersen           41.1          17.6               182        3200\n 9 Adelie  Torgersen           38.6          21.2               191        3800\n10 Adelie  Torgersen           34.6          21.1               198        4400\n# … with 136 more rows, and 2 more variables: sex <fct>, year <int>\n\n\n\nggplot() +\n  geom_function(fun = dnorm, color = \"black\") +\n  geom_function(fun = ~ dt(.x, df = 3), color = \"purple\") +\n  geom_function(fun = ~ dt(.x, df = 10), color = \"red\") +\n  lims(x = c(-3, 3))\n\n\n\n\n\\(\\alpha\\) = significance threshold = 5%\n\nt.test(\n  formula = bill_length_mm ~ sex,\n  data = adelie\n)\n\n\n    Welch Two Sample t-test\n\ndata:  bill_length_mm by sex\nt = -8.7765, df = 142.12, p-value = 4.801e-15\nalternative hypothesis: true difference in means between group female and group male is not equal to 0\n95 percent confidence interval:\n -3.838514 -2.427240\nsample estimates:\nmean in group female   mean in group male \n            37.25753             40.39041 \n\n\n\nt.test(\n  formula = bill_length_mm ~ sex,\n  data = adelie,\n  alternative = \"less\"\n)\n\n\n    Welch Two Sample t-test\n\ndata:  bill_length_mm by sex\nt = -8.7765, df = 142.12, p-value = 2.401e-15\nalternative hypothesis: true difference in means between group female and group male is less than 0\n95 percent confidence interval:\n      -Inf -2.541877\nsample estimates:\nmean in group female   mean in group male \n            37.25753             40.39041 \n\n\nmultiple testing\n\npvalues <- c(0.01, 0.05, 0.4, 0.002)\np.adjust(pvalues, method = \"bonferroni\")\n\n[1] 0.040 0.200 1.000 0.008\n\n\n\np.adjust(pvalues, method = \"fdr\")\n\n[1] 0.02000000 0.06666667 0.40000000 0.00800000\n\n\n\npower.t.test(n = 5, delta = 1, sd = 0.5, sig.level = 0.05)\n\n\n     Two-sample t test power calculation \n\n              n = 5\n          delta = 1\n             sd = 0.5\n      sig.level = 0.05\n          power = 0.7905416\n    alternative = two.sided\n\nNOTE: n is number in *each* group\n\n\n\npower.t.test(delta = 1, sd = 1, sig.level = 0.05, power = 0.9)\n\n\n     Two-sample t test power calculation \n\n              n = 22.0211\n          delta = 1\n             sd = 1\n      sig.level = 0.05\n          power = 0.9\n    alternative = two.sided\n\nNOTE: n is number in *each* group\n\n\n\nggplot() +\n  geom_function(fun = ~ dnorm(.x, 0, 1), color = \"black\") +\n  geom_function(fun = ~ dnorm(.x, 1, 1), color = \"red\") +\n  lims(x = c(-3, 8))\n\n\n\n\nnon-parametric\n\nwilcox.test(\n  formula = bill_length_mm ~ sex,\n  data = adelie,\n  alternative = \"less\"\n)\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  bill_length_mm by sex\nW = 793, p-value = 1.201e-13\nalternative hypothesis: true location shift is less than 0\n\n\n\nwilcox.test(x = 1:3, y = 4:6)\n\n\n    Wilcoxon rank sum exact test\n\ndata:  1:3 and 4:6\nW = 0, p-value = 0.1\nalternative hypothesis: true location shift is not equal to 0\n\n\nANOVA\n\nmales <- penguins |> \n  filter(sex == \"male\")\n\nmales\n\n# A tibble: 168 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.3          20.6               190        3650\n 3 Adelie  Torgersen           39.2          19.6               195        4675\n 4 Adelie  Torgersen           38.6          21.2               191        3800\n 5 Adelie  Torgersen           34.6          21.1               198        4400\n 6 Adelie  Torgersen           42.5          20.7               197        4500\n 7 Adelie  Torgersen           46            21.5               194        4200\n 8 Adelie  Biscoe              37.7          18.7               180        3600\n 9 Adelie  Biscoe              38.2          18.1               185        3950\n10 Adelie  Biscoe              38.8          17.2               180        3800\n# … with 158 more rows, and 2 more variables: sex <fct>, year <int>\n\n\n\nmales |> \n  ggplot(aes(species, bill_length_mm)) +\n  ggbeeswarm::geom_beeswarm()\n\n\n\n\n\nanova <- aov(bill_length_mm ~ species, males)\nsummary(anova)\n\n             Df Sum Sq Mean Sq F value Pr(>F)    \nspecies       2   3912  1956.0   359.3 <2e-16 ***\nResiduals   165    898     5.4                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nTukeyHSD(anova)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = bill_length_mm ~ species, data = males)\n\n$species\n                      diff       lwr        upr    p adj\nChinstrap-Adelie 10.703707  9.557978 11.8494356 0.000000\nGentoo-Adelie     9.083360  8.126128 10.0405909 0.000000\nGentoo-Chinstrap -1.620347 -2.801343 -0.4393515 0.004044\n\n\n\nmultcomp::glht(anova, multcomp::mcp(species = \"Dunnet\")) |> \n  summary()\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Dunnett Contrasts\n\n\nFit: aov(formula = bill_length_mm ~ species, data = males)\n\nLinear Hypotheses:\n                        Estimate Std. Error t value Pr(>|t|)    \nChinstrap - Adelie == 0  10.7037     0.4844   22.09   <1e-10 ***\nGentoo - Adelie == 0      9.0834     0.4047   22.44   <1e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\ntwo-way anova\n\nanova <- aov(bill_length_mm ~ species + sex, penguins)\nsummary(anova)\n\n             Df Sum Sq Mean Sq F value Pr(>F)    \nspecies       2   7015    3508   649.1 <2e-16 ***\nsex           1   1136    1136   210.2 <2e-16 ***\nResiduals   329   1778       5                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n11 observations deleted due to missingness\n\n\n\npenguins |> \n  drop_na() |> \n  ggplot(aes(species, bill_length_mm)) +\n  ggbeeswarm::geom_beeswarm() +\n  facet_wrap(~sex)\n\n\n\n\nFun fact: it’s all linear models!\n\nmodel <- lm(bill_length_mm ~ species + sex, penguins)\nsummary(model)\n\n\nCall:\nlm(formula = bill_length_mm ~ species + sex, data = penguins)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.0869 -1.3770 -0.0709  1.2254 11.0131 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       36.9770     0.2307  160.25   <2e-16 ***\nspeciesChinstrap  10.0099     0.3413   29.33   <2e-16 ***\nspeciesGentoo      8.6975     0.2871   30.29   <2e-16 ***\nsexmale            3.6939     0.2548   14.50   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.325 on 329 degrees of freedom\n  (11 observations deleted due to missingness)\nMultiple R-squared:  0.8209,    Adjusted R-squared:  0.8193 \nF-statistic: 502.8 on 3 and 329 DF,  p-value: < 2.2e-16\n\nanova(model)\n\nAnalysis of Variance Table\n\nResponse: bill_length_mm\n           Df Sum Sq Mean Sq F value    Pr(>F)    \nspecies     2 7015.4  3507.7  649.12 < 2.2e-16 ***\nsex         1 1135.7  1135.7  210.17 < 2.2e-16 ***\nResiduals 329 1777.8     5.4                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "day1.html",
    "href": "day1.html",
    "title": "Tag 1",
    "section": "",
    "text": "Markdown text. Bold.\n\n1 + 1\n\n[1] 2\n\n\n\n0 / 0\n\n[1] NaN\n\n\n\n1 * 10\n\n[1] 10\n\n\n\n10 %/% 2\n\n[1] 5\n\n\n\n10 %% 2\n\n[1] 0\n\n\nalt - -\n\nx <- 10\nx = 10\n\n\nx <- 1:10\nx + 1\n\n [1]  2  3  4  5  6  7  8  9 10 11\n\n\n\ny <- x^2\ny\n\n [1]   1   4   9  16  25  36  49  64  81 100\n\n\n\nmean(x = y)\n\n[1] 38.5\n\n\n\nlibrary(palmerpenguins)\n\n\nView(penguins)\n\n\nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n\n\nhead(penguins$species)\n\n[1] Adelie Adelie Adelie Adelie Adelie Adelie\nLevels: Adelie Chinstrap Gentoo\n\n\n\nlibrary(tidyverse)\n\n\nadd_one <- function(x) {\n  x + 1\n}\n\nctrl + shift + M\n\nx %>% add_one() %>% sum()\n\n[1] 65\n\n\n\nx %>% add_one() %>% sum()\n\n[1] 65\n\n\n\nadd_this <- function(x, y) {\n  x + y\n}\n\n\nx |> add_this(10)\n\n [1] 11 12 13 14 15 16 17 18 19 20\n\nx %>% add_this(x = 10, y = .)\n\n [1] 11 12 13 14 15 16 17 18 19 20\n\n\n\nx |> (\\(x) x + 1)()\n\n [1]  2  3  4  5  6  7  8  9 10 11\n\n\n\nadd_one = \\(x) + 1\n\n\nx |> \n  (function(x) {x + 1})()\n\n [1]  2  3  4  5  6  7  8  9 10 11\n\n\nGrammar of Graphics\nhttps://ggplot2.tidyverse.org/\n\nx <- 1:10\nx > 5\n\n [1] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n\n\n\nc(1, 3, 2, 3)\n\n[1] 1 3 2 3\n\n\n\nplt <- penguins |> \n  drop_na() |> \n  ggplot(aes(flipper_length_mm, body_mass_g, shape = sex, color = species)) +\n  geom_point() +\n  theme_minimal() +\n  theme(\n    legend.title = element_text(face = \"bold\")\n  ) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(group = species)) +\n  scale_x_continuous(limits = c(180, 200))\n  # lims(x = c(180, 200)) +\n  # coord_cartesian(xlim = c(180, 200))\n\nplt\n\n\n\nFigure 1: Linear regression on penguin data.\n\n\n\n\nHey, look at Figure 1!\n\npenguins |> \n  drop_na() |>\n  ggplot(aes(sex, body_mass_g)) +\n  geom_violin() +\n  ggbeeswarm::geom_quasirandom()\n\n\n\n\nIs there a relationship between flipper length and body mass? How is this influenced by sex and species? Experiment with different visualizations!\n\npenguins |> \n  select(species, island, bill_length_mm)\n\n# A tibble: 344 × 3\n   species island    bill_length_mm\n   <fct>   <fct>              <dbl>\n 1 Adelie  Torgersen           39.1\n 2 Adelie  Torgersen           39.5\n 3 Adelie  Torgersen           40.3\n 4 Adelie  Torgersen           NA  \n 5 Adelie  Torgersen           36.7\n 6 Adelie  Torgersen           39.3\n 7 Adelie  Torgersen           38.9\n 8 Adelie  Torgersen           39.2\n 9 Adelie  Torgersen           34.1\n10 Adelie  Torgersen           42  \n# … with 334 more rows\n\n\n\npenguins |> \n  select(-species)\n\n# A tibble: 344 × 7\n   island  bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex    year\n   <fct>            <dbl>         <dbl>            <int>       <int> <fct> <int>\n 1 Torger…           39.1          18.7              181        3750 male   2007\n 2 Torger…           39.5          17.4              186        3800 fema…  2007\n 3 Torger…           40.3          18                195        3250 fema…  2007\n 4 Torger…           NA            NA                 NA          NA <NA>   2007\n 5 Torger…           36.7          19.3              193        3450 fema…  2007\n 6 Torger…           39.3          20.6              190        3650 male   2007\n 7 Torger…           38.9          17.8              181        3625 fema…  2007\n 8 Torger…           39.2          19.6              195        4675 male   2007\n 9 Torger…           34.1          18.1              193        3475 <NA>   2007\n10 Torger…           42            20.2              190        4250 <NA>   2007\n# … with 334 more rows\n\n\n\npenguins |> \n  select(starts_with(\"bill\"))\n\n# A tibble: 344 × 2\n   bill_length_mm bill_depth_mm\n            <dbl>         <dbl>\n 1           39.1          18.7\n 2           39.5          17.4\n 3           40.3          18  \n 4           NA            NA  \n 5           36.7          19.3\n 6           39.3          20.6\n 7           38.9          17.8\n 8           39.2          19.6\n 9           34.1          18.1\n10           42            20.2\n# … with 334 more rows\n\n\n\npenguins |> \n  mutate(\n    new_column = bill_length_mm * 10,\n    new_column2 = bill_length_mm - bill_depth_mm\n  ) |> \n  select(starts_with(\"new\"), everything())\n\n# A tibble: 344 × 10\n   new_column new_column2 species island    bill_length_mm bill_depth_mm\n        <dbl>       <dbl> <fct>   <fct>              <dbl>         <dbl>\n 1        391        20.4 Adelie  Torgersen           39.1          18.7\n 2        395        22.1 Adelie  Torgersen           39.5          17.4\n 3        403        22.3 Adelie  Torgersen           40.3          18  \n 4         NA        NA   Adelie  Torgersen           NA            NA  \n 5        367        17.4 Adelie  Torgersen           36.7          19.3\n 6        393        18.7 Adelie  Torgersen           39.3          20.6\n 7        389        21.1 Adelie  Torgersen           38.9          17.8\n 8        392        19.6 Adelie  Torgersen           39.2          19.6\n 9        341        16   Adelie  Torgersen           34.1          18.1\n10        420        21.8 Adelie  Torgersen           42            20.2\n# … with 334 more rows, and 4 more variables: flipper_length_mm <int>,\n#   body_mass_g <int>, sex <fct>, year <int>\n\n\n\npenguins |> \n  summarise(\n    hello = mean(bill_length_mm, na.rm = TRUE)\n  )\n\n# A tibble: 1 × 1\n  hello\n  <dbl>\n1  43.9\n\n\n\npenguins |> \n  group_by(species) |> \n  summarise(\n    m = mean(bill_length_mm, na.rm = TRUE)\n  ) |> \n  ungroup()\n\n# A tibble: 3 × 2\n  species       m\n  <fct>     <dbl>\n1 Adelie     38.8\n2 Chinstrap  48.8\n3 Gentoo     47.5"
  },
  {
    "objectID": "day1.html#resources",
    "href": "day1.html#resources",
    "title": "Tag 1",
    "section": "Resources",
    "text": "Resources\n\nhttps://jmbuhr.de/dataintro/resources.html\nhttps://quarto.org/\nhttps://posit.co/resources/cheatsheets/\nhttps://r4ds.had.co.nz/"
  },
  {
    "objectID": "day1.html#overview",
    "href": "day1.html#overview",
    "title": "Tag 1",
    "section": "Overview",
    "text": "Overview\n\n\nSource: https://r4ds.had.co.nz/\n\n\n\nreadr\ntidyr\ndplyr\nggplot2\ntidymodels\n\nReadr\n\npath <- \"./data/02/gapminder.csv\"\nread_lines(path, n_max = 10)\n\n [1] \"country,continent,year,lifeExp,pop,gdpPercap\"     \n [2] \"Afghanistan,Asia,1952,28.801,8425333,779.4453145\" \n [3] \"Afghanistan,Asia,1957,30.332,9240934,820.8530296\" \n [4] \"Afghanistan,Asia,1962,31.997,10267083,853.10071\"  \n [5] \"Afghanistan,Asia,1967,34.02,11537966,836.1971382\" \n [6] \"Afghanistan,Asia,1972,36.088,13079460,739.9811058\"\n [7] \"Afghanistan,Asia,1977,38.438,14880372,786.11336\"  \n [8] \"Afghanistan,Asia,1982,39.854,12881816,978.0114388\"\n [9] \"Afghanistan,Asia,1987,40.822,13867957,852.3959448\"\n[10] \"Afghanistan,Asia,1992,41.674,16317921,649.3413952\"\n\n\n\nread_csv(path)\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\n\n\nreadxl::read_xlsx(\"./data/02/gapminder.xlsx\")\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\n\n\nread_tsv(\"./data/02/gapminder_tsv.txt\") |> \n  mutate(year = as.integer(year)) |> \n  mutate(year = paste(as.character(year), \"hello\" )) |> \n  mutate(year = parse_number(year))\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\n\n\nread_tsv(\"./data/02/gapminder_tsv.txt\") |> \n  mutate(year = as.character(year),\n         decade = str_sub(year, 1, 2),\n         year = str_sub(year, 2, 3)\n         ) |> \n  select(decade, year, everything()) |> \n  unite(\"year\", decade, year, sep = \"\") |> \n  mutate(year = parse_number(year))\n\n# A tibble: 1,704 × 6\n    year country     continent lifeExp      pop gdpPercap\n   <dbl> <chr>       <chr>       <dbl>    <dbl>     <dbl>\n 1  1995 Afghanistan Asia         28.8  8425333      779.\n 2  1995 Afghanistan Asia         30.3  9240934      821.\n 3  1996 Afghanistan Asia         32.0 10267083      853.\n 4  1996 Afghanistan Asia         34.0 11537966      836.\n 5  1997 Afghanistan Asia         36.1 13079460      740.\n 6  1997 Afghanistan Asia         38.4 14880372      786.\n 7  1998 Afghanistan Asia         39.9 12881816      978.\n 8  1998 Afghanistan Asia         40.8 13867957      852.\n 9  1999 Afghanistan Asia         41.7 16317921      649.\n10  1999 Afghanistan Asia         41.8 22227415      635.\n# … with 1,694 more rows\n\n\n\nread_delim(\"./data/02/obscure_file.tsv\", delim = \"~\")\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\n\n\nread_csv(\"./data/02/gapminder_messier.csv\", comment = \"#\", skip = 2)\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\n\nTidyr\n\ntable1\n\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <int>  <int>      <int>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n\n\ntable2\n\n# A tibble: 12 × 4\n   country      year type            count\n   <chr>       <int> <chr>           <int>\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n\n\n\ntable2 |> \n  pivot_wider(names_from = type,\n              values_from = count)\n\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <int>  <int>      <int>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n\n\ntable3 |> \n  separate(rate, c(\"cases\", \"population\")) |> \n  # mutate(across( c(cases, population), parse_number))\n  mutate(across(where(is.character), parse_guess))\n\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <int>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n\n\ntable4a\n\n# A tibble: 3 × 3\n  country     `1999` `2000`\n* <chr>        <int>  <int>\n1 Afghanistan    745   2666\n2 Brazil       37737  80488\n3 China       212258 213766\n\n\n\ntable4b\n\n# A tibble: 3 × 3\n  country         `1999`     `2000`\n* <chr>            <int>      <int>\n1 Afghanistan   19987071   20595360\n2 Brazil       172006362  174504898\n3 China       1272915272 1280428583\n\n\n\nleft_join(table4a, table4b, by = c(\"country\"),\n          suffix = c(\"_cases\", \"_pop\")) |> \n  pivot_longer(-country) |> \n  separate(name, c(\"year\", \"type\")) |> \n  pivot_wider(names_from = type, values_from = value)\n\n# A tibble: 6 × 4\n  country     year   cases        pop\n  <chr>       <chr>  <int>      <int>\n1 Afghanistan 1999     745   19987071\n2 Afghanistan 2000    2666   20595360\n3 Brazil      1999   37737  172006362\n4 Brazil      2000   80488  174504898\n5 China       1999  212258 1272915272\n6 China       2000  213766 1280428583\n\n\n\nleft_join(table4a, table4b, by = c(\"country\"),\n          suffix = c(\"_cases\", \"_pop\")) |> \n  pivot_longer(-country, names_sep = \"_\",\n               names_to = c(\"year\", \"type\"))\n\n# A tibble: 12 × 4\n   country     year  type       value\n   <chr>       <chr> <chr>      <int>\n 1 Afghanistan 1999  cases        745\n 2 Afghanistan 2000  cases       2666\n 3 Afghanistan 1999  pop     19987071\n 4 Afghanistan 2000  pop     20595360\n 5 Brazil      1999  cases      37737\n 6 Brazil      2000  cases      80488\n 7 Brazil      1999  pop    172006362\n 8 Brazil      2000  pop    174504898\n 9 China       1999  cases     212258\n10 China       2000  cases     213766\n11 China       1999  pop   1272915272\n12 China       2000  pop   1280428583\n\n\n\ntable5 |> \n  unite(\"year\", century, year, sep = \"\") |> \n  mutate(year = parse_integer(year))\n\n# A tibble: 6 × 3\n  country      year rate             \n  <chr>       <int> <chr>            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n\n\n\nsort_of_an_array <- expand_grid(x = 1:10, y = x, z = x) |> \n  mutate(value = rnorm(n()))\n\n\nsort_of_an_array |> \n  group_by(x, y) |> \n  summarise(mean(value))\n\n# A tibble: 100 × 3\n# Groups:   x [10]\n       x     y `mean(value)`\n   <int> <int>         <dbl>\n 1     1     1        0.234 \n 2     1     2        0.337 \n 3     1     3       -0.535 \n 4     1     4        0.410 \n 5     1     5       -0.158 \n 6     1     6        0.396 \n 7     1     7       -0.534 \n 8     1     8        0.308 \n 9     1     9        0.0563\n10     1    10        0.505 \n# … with 90 more rows\n\n\nDplyr\n\nlibrary(gapminder)\n\n\ngapminder |> \n  select(country)\n\n# A tibble: 1,704 × 1\n   country    \n   <fct>      \n 1 Afghanistan\n 2 Afghanistan\n 3 Afghanistan\n 4 Afghanistan\n 5 Afghanistan\n 6 Afghanistan\n 7 Afghanistan\n 8 Afghanistan\n 9 Afghanistan\n10 Afghanistan\n# … with 1,694 more rows\n\n\n\ngapminder |> \n  filter(\n    country == \"Afghanistan\",\n    year == 1957 | year == 1952\n  )\n\n# A tibble: 2 × 6\n  country     continent  year lifeExp     pop gdpPercap\n  <fct>       <fct>     <int>   <dbl>   <int>     <dbl>\n1 Afghanistan Asia       1952    28.8 8425333      779.\n2 Afghanistan Asia       1957    30.3 9240934      821.\n\n\n\ngapminder |> \n  group_by(continent) |>\n  filter(lifeExp == max(lifeExp))\n\n# A tibble: 5 × 6\n# Groups:   continent [5]\n  country   continent  year lifeExp       pop gdpPercap\n  <fct>     <fct>     <int>   <dbl>     <int>     <dbl>\n1 Australia Oceania    2007    81.2  20434176    34435.\n2 Canada    Americas   2007    80.7  33390141    36319.\n3 Iceland   Europe     2007    81.8    301931    36181.\n4 Japan     Asia       2007    82.6 127467972    31656.\n5 Reunion   Africa     2007    76.4    798094     7670.\n\n\n\nrowwise\n\n\ngapminder |> \n  rowwise()\n\n# A tibble: 1,704 × 6\n# Rowwise: \n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\n\n\ndf <- tibble(x = runif(6), y = runif(6), z = runif(6))\n\ndf |>\n  rowwise() |>\n  mutate(m = mean(c(x, y, z)))\n\n# A tibble: 6 × 4\n# Rowwise: \n      x      y     z     m\n  <dbl>  <dbl> <dbl> <dbl>\n1 0.179 0.775  0.306 0.420\n2 0.483 0.104  0.130 0.239\n3 0.653 0.0914 0.480 0.408\n4 0.341 0.602  0.257 0.400\n5 0.644 0.543  0.114 0.434\n6 0.246 0.820  0.863 0.643\n\n\n\ndf |> \n  mutate(m = (x + y + z) / 3 )\n\n# A tibble: 6 × 4\n      x      y     z     m\n  <dbl>  <dbl> <dbl> <dbl>\n1 0.179 0.775  0.306 0.420\n2 0.483 0.104  0.130 0.239\n3 0.653 0.0914 0.480 0.408\n4 0.341 0.602  0.257 0.400\n5 0.644 0.543  0.114 0.434\n6 0.246 0.820  0.863 0.643\n\n\n\ndf |> \n  mutate(id = 1:n()) |> \n  pivot_longer(-id) |> \n  group_by(id) |>\n  summarise(mean(value))\n\n# A tibble: 6 × 2\n     id `mean(value)`\n  <int>         <dbl>\n1     1         0.420\n2     2         0.239\n3     3         0.408\n4     4         0.400\n5     5         0.434\n6     6         0.643\n\n\n\npalmerpenguins::penguins |> \n  group_by(species) |> \n  summarise(m = mean(bill_length_mm, na.rm = TRUE))\n\n# A tibble: 3 × 2\n  species       m\n  <fct>     <dbl>\n1 Adelie     38.8\n2 Chinstrap  48.8\n3 Gentoo     47.5\n\n\nQuestions\n\ntidy evaluation / programming with dplyr\n\n\nsome_country <- \"Argentina\"\n\ngapminder |> \n  filter(country == some_country)\n\n# A tibble: 12 × 6\n   country   continent  year lifeExp      pop gdpPercap\n   <fct>     <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Argentina Americas   1952    62.5 17876956     5911.\n 2 Argentina Americas   1957    64.4 19610538     6857.\n 3 Argentina Americas   1962    65.1 21283783     7133.\n 4 Argentina Americas   1967    65.6 22934225     8053.\n 5 Argentina Americas   1972    67.1 24779799     9443.\n 6 Argentina Americas   1977    68.5 26983828    10079.\n 7 Argentina Americas   1982    69.9 29341374     8998.\n 8 Argentina Americas   1987    70.8 31620918     9140.\n 9 Argentina Americas   1992    71.9 33958947     9308.\n10 Argentina Americas   1997    73.3 36203463    10967.\n11 Argentina Americas   2002    74.3 38331121     8798.\n12 Argentina Americas   2007    75.3 40301927    12779.\n\n\nhttps://dplyr.tidyverse.org/articles/programming.html\n\nsome_column <- \"country\"\n\ngapminder |> \n  group_by(some_column)\n\nError in `group_by()`:\n! Must group by variables found in `.data`.\n✖ Column `some_column` is not found.\n\n\n\nour_count <- function(data, column) {\n  data |> \n    group_by({{column}}) |> \n    summarise(n = n())\n}\n\nour_count(gapminder, country)\n\n# A tibble: 142 × 2\n   country         n\n   <fct>       <int>\n 1 Afghanistan    12\n 2 Albania        12\n 3 Algeria        12\n 4 Angola         12\n 5 Argentina      12\n 6 Australia      12\n 7 Austria        12\n 8 Bahrain        12\n 9 Bangladesh     12\n10 Belgium        12\n# … with 132 more rows\n\n\n\nour_count2 <- function(data, column) {\n  column_sym <- sym(column)\n  data |> \n    group_by(column = eval(column_sym)) |> \n    summarise(n = n())\n}\n\nour_count2(gapminder, \"country\")\n\n# A tibble: 142 × 2\n   column          n\n   <fct>       <int>\n 1 Afghanistan    12\n 2 Albania        12\n 3 Algeria        12\n 4 Angola         12\n 5 Argentina      12\n 6 Australia      12\n 7 Austria        12\n 8 Bahrain        12\n 9 Bangladesh     12\n10 Belgium        12\n# … with 132 more rows\n\n\nggglot2\nand forcats\n\nplt <- gapminder |> \n  filter(year == max(year)) |> \n  mutate(\n    country = fct_reorder(country, lifeExp)\n  ) |>\n  ggplot(aes(lifeExp, country, text = country)) +\n  geom_point()\n\nplt\n\n\n\n\n\nplotly::ggplotly(plt)\n\n\n\n\n\n\ngapminder |> \n  filter(year == max(year)) |> \n  slice_max(lifeExp, n = 10) |> \n  mutate(\n    country = fct_reorder(country, lifeExp)\n  ) |>\n  ggplot(aes(lifeExp, country)) +\n  geom_col()\n\n\n\n\n\ntheme_set(theme_bw())\n\ngapminder |> \n  filter(year == max(year)) |> \n  ggplot(aes(continent, pop, fill = country)) +\n  geom_col(position = position_dodge(preserve = \"single\")) +\n  scale_fill_manual(values = country_colors) +\n  guides(fill = \"none\") +\n  scale_y_continuous(labels = scales::label_number(),\n                     n.breaks = 10)\n\n\n\n\n\nscales::label_number()\n\nfunction (x) \n{\n    number(x, accuracy = accuracy, scale = scale, prefix = prefix, \n        suffix = suffix, big.mark = big.mark, decimal.mark = decimal.mark, \n        style_positive = style_positive, style_negative = style_negative, \n        scale_cut = scale_cut, trim = trim, ...)\n}\n<bytecode: 0x55e3e7eb78e8>\n<environment: 0x55e3e5861020>\n\n\n\ngeom_col / bar, other geoms"
  },
  {
    "objectID": "boardgames.html",
    "href": "boardgames.html",
    "title": "Boardgames",
    "section": "",
    "text": "Setup\n\nlibrary(tidyverse)\n\n\nratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-25/ratings.csv')\ndetails <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-25/details.csv')\n\nEDA\n\nratings\n\n# A tibble: 21,831 × 10\n     num     id name          year  rank average bayes_average users_rated url  \n   <dbl>  <dbl> <chr>        <dbl> <dbl>   <dbl>         <dbl>       <dbl> <chr>\n 1   105  30549 Pandemic      2008   106    7.59          7.49      108975 /boa…\n 2   189    822 Carcassonne   2000   190    7.42          7.31      108738 /boa…\n 3   428     13 Catan         1995   429    7.14          6.97      108024 /boa…\n 4    72  68448 7 Wonders     2010    73    7.74          7.63       89982 /boa…\n 5   103  36218 Dominion      2008   104    7.61          7.50       81561 /boa…\n 6   191   9209 Ticket to R…  2004   192    7.41          7.30       76171 /boa…\n 7   100 178900 Codenames     2015   101    7.6           7.51       74419 /boa…\n 8     3 167791 Terraformin…  2016     4    8.42          8.27       74216 /boa…\n 9    15 173346 7 Wonders D…  2015    16    8.11          7.98       69472 /boa…\n10    35  31260 Agricola      2007    36    7.93          7.81       66093 /boa…\n# … with 21,821 more rows, and 1 more variable: thumbnail <chr>\n\n\n\ndetails\n\n# A tibble: 21,631 × 23\n     num     id primary          description yearpublished minplayers maxplayers\n   <dbl>  <dbl> <chr>            <chr>               <dbl>      <dbl>      <dbl>\n 1     0  30549 Pandemic         In Pandemi…          2008          2          4\n 2     1    822 Carcassonne      Carcassonn…          2000          2          5\n 3     2     13 Catan            In CATAN (…          1995          3          4\n 4     3  68448 7 Wonders        You are th…          2010          2          7\n 5     4  36218 Dominion         &quot;You …          2008          2          4\n 6     5   9209 Ticket to Ride   With elega…          2004          2          5\n 7     6 178900 Codenames        Codenames …          2015          2          8\n 8     7 167791 Terraforming Ma… In the 240…          2016          1          5\n 9     8 173346 7 Wonders Duel   In many wa…          2015          2          2\n10     9  31260 Agricola         Descriptio…          2007          1          5\n# … with 21,621 more rows, and 16 more variables: playingtime <dbl>,\n#   minplaytime <dbl>, maxplaytime <dbl>, minage <dbl>,\n#   boardgamecategory <chr>, boardgamemechanic <chr>, boardgamefamily <chr>,\n#   boardgameexpansion <chr>, boardgameimplementation <chr>,\n#   boardgamedesigner <chr>, boardgameartist <chr>, boardgamepublisher <chr>,\n#   owned <dbl>, trading <dbl>, wanting <dbl>, wishing <dbl>\n\n\nhttps://github.com/rfordatascience/tidytuesday/blob/master/data/2022/2022-01-25/readme.md\n\nratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-25/ratings.csv')\ndetails <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-25/details.csv')\ngames <- left_join(ratings, details, by = c(\"id\"))\ngames\n\n# A tibble: 21,831 × 32\n   num.x     id name          year  rank average bayes_average users_rated url  \n   <dbl>  <dbl> <chr>        <dbl> <dbl>   <dbl>         <dbl>       <dbl> <chr>\n 1   105  30549 Pandemic      2008   106    7.59          7.49      108975 /boa…\n 2   189    822 Carcassonne   2000   190    7.42          7.31      108738 /boa…\n 3   428     13 Catan         1995   429    7.14          6.97      108024 /boa…\n 4    72  68448 7 Wonders     2010    73    7.74          7.63       89982 /boa…\n 5   103  36218 Dominion      2008   104    7.61          7.50       81561 /boa…\n 6   191   9209 Ticket to R…  2004   192    7.41          7.30       76171 /boa…\n 7   100 178900 Codenames     2015   101    7.6           7.51       74419 /boa…\n 8     3 167791 Terraformin…  2016     4    8.42          8.27       74216 /boa…\n 9    15 173346 7 Wonders D…  2015    16    8.11          7.98       69472 /boa…\n10    35  31260 Agricola      2007    36    7.93          7.81       66093 /boa…\n# … with 21,821 more rows, and 23 more variables: thumbnail <chr>, num.y <dbl>,\n#   primary <chr>, description <chr>, yearpublished <dbl>, minplayers <dbl>,\n#   maxplayers <dbl>, playingtime <dbl>, minplaytime <dbl>, maxplaytime <dbl>,\n#   minage <dbl>, boardgamecategory <chr>, boardgamemechanic <chr>,\n#   boardgamefamily <chr>, boardgameexpansion <chr>,\n#   boardgameimplementation <chr>, boardgamedesigner <chr>,\n#   boardgameartist <chr>, boardgamepublisher <chr>, owned <dbl>, …\n\n\n\nlist(\"hello\", 1, TRUE)\n\n[[1]]\n[1] \"hello\"\n\n[[2]]\n[1] 1\n\n[[3]]\n[1] TRUE\n\n\nhttps://github.com/rstudio/cheatsheets/blob/main/strings.pdf\n\nclean_category <- function(x) {\n  str_remove_all(x, \"[\\\\[\\\\]'\\\\s]\") |> \n    str_split(\",\")\n}\nclean_category(\"['hello', 'world']\")\n\n[[1]]\n[1] \"hello\" \"world\"\n\n\ntidyr to the rescue: https://tidyr.tidyverse.org/\n\ngames |> \n  head() |> \n  mutate(across(starts_with(\"boardgame\"), clean_category)) |> \n  unnest_longer(boardgamecategory)\n\n# A tibble: 14 × 32\n   num.x    id name           year  rank average bayes_average users_rated url  \n   <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>         <dbl>       <dbl> <chr>\n 1   105 30549 Pandemic       2008   106    7.59          7.49      108975 /boa…\n 2   189   822 Carcassonne    2000   190    7.42          7.31      108738 /boa…\n 3   189   822 Carcassonne    2000   190    7.42          7.31      108738 /boa…\n 4   189   822 Carcassonne    2000   190    7.42          7.31      108738 /boa…\n 5   428    13 Catan          1995   429    7.14          6.97      108024 /boa…\n 6   428    13 Catan          1995   429    7.14          6.97      108024 /boa…\n 7    72 68448 7 Wonders      2010    73    7.74          7.63       89982 /boa…\n 8    72 68448 7 Wonders      2010    73    7.74          7.63       89982 /boa…\n 9    72 68448 7 Wonders      2010    73    7.74          7.63       89982 /boa…\n10    72 68448 7 Wonders      2010    73    7.74          7.63       89982 /boa…\n11    72 68448 7 Wonders      2010    73    7.74          7.63       89982 /boa…\n12   103 36218 Dominion       2008   104    7.61          7.50       81561 /boa…\n13   103 36218 Dominion       2008   104    7.61          7.50       81561 /boa…\n14   191  9209 Ticket to Ri…  2004   192    7.41          7.30       76171 /boa…\n# … with 23 more variables: thumbnail <chr>, num.y <dbl>, primary <chr>,\n#   description <chr>, yearpublished <dbl>, minplayers <dbl>, maxplayers <dbl>,\n#   playingtime <dbl>, minplaytime <dbl>, maxplaytime <dbl>, minage <dbl>,\n#   boardgamecategory <chr>, boardgamemechanic <list>, boardgamefamily <list>,\n#   boardgameexpansion <list>, boardgameimplementation <list>,\n#   boardgamedesigner <list>, boardgameartist <list>,\n#   boardgamepublisher <list>, owned <dbl>, trading <dbl>, wanting <dbl>, …\n\n\n\ngames |> \n  head() |> \n  mutate(across(starts_with(\"boardgame\"), clean_category)) |> \n  unnest_longer(boardgamecategory) |> \n  mutate(value = TRUE) |>\n  pivot_wider(names_from = boardgamecategory, values_from = value, values_fill = FALSE)\n\n# A tibble: 6 × 41\n  num.x    id name            year  rank average bayes_average users_rated url  \n  <dbl> <dbl> <chr>          <dbl> <dbl>   <dbl>         <dbl>       <dbl> <chr>\n1   105 30549 Pandemic        2008   106    7.59          7.49      108975 /boa…\n2   189   822 Carcassonne     2000   190    7.42          7.31      108738 /boa…\n3   428    13 Catan           1995   429    7.14          6.97      108024 /boa…\n4    72 68448 7 Wonders       2010    73    7.74          7.63       89982 /boa…\n5   103 36218 Dominion        2008   104    7.61          7.50       81561 /boa…\n6   191  9209 Ticket to Ride  2004   192    7.41          7.30       76171 /boa…\n# … with 32 more variables: thumbnail <chr>, num.y <dbl>, primary <chr>,\n#   description <chr>, yearpublished <dbl>, minplayers <dbl>, maxplayers <dbl>,\n#   playingtime <dbl>, minplaytime <dbl>, maxplaytime <dbl>, minage <dbl>,\n#   boardgamemechanic <list>, boardgamefamily <list>,\n#   boardgameexpansion <list>, boardgameimplementation <list>,\n#   boardgamedesigner <list>, boardgameartist <list>,\n#   boardgamepublisher <list>, owned <dbl>, trading <dbl>, wanting <dbl>, …"
  },
  {
    "objectID": "day3.html",
    "href": "day3.html",
    "title": "Tag 3",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gapminder)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "winteraka22",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\nprint(\"hello world\")\n\n[1] \"hello world\""
  },
  {
    "objectID": "day3.html#population-data",
    "href": "day3.html#population-data",
    "title": "Tag 3",
    "section": "Population data",
    "text": "Population data\nhttps://population.un.org/wpp/Download/Standard/CSV/"
  },
  {
    "objectID": "day3.html#parametrische-reports",
    "href": "day3.html#parametrische-reports",
    "title": "Tag 3",
    "section": "Parametrische Reports",
    "text": "Parametrische Reports\n\ngapminder |> \n  filter(country == params$country)\n\n# A tibble: 12 × 6\n   country continent  year lifeExp      pop gdpPercap\n   <fct>   <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Germany Europe     1952    67.5 69145952     7144.\n 2 Germany Europe     1957    69.1 71019069    10188.\n 3 Germany Europe     1962    70.3 73739117    12902.\n 4 Germany Europe     1967    70.8 76368453    14746.\n 5 Germany Europe     1972    71   78717088    18016.\n 6 Germany Europe     1977    72.5 78160773    20513.\n 7 Germany Europe     1982    73.8 78335266    22032.\n 8 Germany Europe     1987    74.8 77718298    24639.\n 9 Germany Europe     1992    76.1 80597764    26505.\n10 Germany Europe     1997    77.3 82011073    27789.\n11 Germany Europe     2002    78.7 82350671    30036.\n12 Germany Europe     2007    79.4 82400996    32170."
  },
  {
    "objectID": "chocolate.html",
    "href": "chocolate.html",
    "title": "Chocolate",
    "section": "",
    "text": "Setup\nreadme\n\nlibrary(tidyverse)\n\n\nraw <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-18/chocolate.csv')\n\n\nstr(raw)\n\nspc_tbl_ [2,530 × 10] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ref                             : num [1:2530] 2454 2458 2454 2542 2546 ...\n $ company_manufacturer            : chr [1:2530] \"5150\" \"5150\" \"5150\" \"5150\" ...\n $ company_location                : chr [1:2530] \"U.S.A.\" \"U.S.A.\" \"U.S.A.\" \"U.S.A.\" ...\n $ review_date                     : num [1:2530] 2019 2019 2019 2021 2021 ...\n $ country_of_bean_origin          : chr [1:2530] \"Tanzania\" \"Dominican Republic\" \"Madagascar\" \"Fiji\" ...\n $ specific_bean_origin_or_bar_name: chr [1:2530] \"Kokoa Kamili, batch 1\" \"Zorzal, batch 1\" \"Bejofo Estate, batch 1\" \"Matasawalevu, batch 1\" ...\n $ cocoa_percent                   : chr [1:2530] \"76%\" \"76%\" \"76%\" \"68%\" ...\n $ ingredients                     : chr [1:2530] \"3- B,S,C\" \"3- B,S,C\" \"3- B,S,C\" \"3- B,S,C\" ...\n $ most_memorable_characteristics  : chr [1:2530] \"rich cocoa, fatty, bready\" \"cocoa, vegetal, savory\" \"cocoa, blackberry, full body\" \"chewy, off, rubbery\" ...\n $ rating                          : num [1:2530] 3.25 3.5 3.75 3 3 3.25 3.5 3.5 3.75 2.75 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ref = col_double(),\n  ..   company_manufacturer = col_character(),\n  ..   company_location = col_character(),\n  ..   review_date = col_double(),\n  ..   country_of_bean_origin = col_character(),\n  ..   specific_bean_origin_or_bar_name = col_character(),\n  ..   cocoa_percent = col_character(),\n  ..   ingredients = col_character(),\n  ..   most_memorable_characteristics = col_character(),\n  ..   rating = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nData cleaning\nEDA"
  },
  {
    "objectID": "bechdel.html",
    "href": "bechdel.html",
    "title": "bechdel",
    "section": "",
    "text": "Setup\nreadme\n\nlibrary(tidyverse)\n\n\nraw_bechdel <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-09/raw_bechdel.csv')\nraw_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-09/movies.csv')\n\n\nstr(raw_bechdel)\n\nspc_tbl_ [8,839 × 5] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ year   : num [1:8839] 1888 1892 1895 1895 1896 ...\n $ id     : num [1:8839] 8040 5433 6200 5444 5406 ...\n $ imdb_id: chr [1:8839] \"0392728\" \"0000003\" \"0132134\" \"0000014\" ...\n $ title  : chr [1:8839] \"Roundhay Garden Scene\" \"Pauvre Pierrot\" \"The Execution of Mary, Queen of Scots\" \"Tables Turned on the Gardener\" ...\n $ rating : num [1:8839] 0 0 0 0 0 0 0 0 0 0 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   year = col_double(),\n  ..   id = col_double(),\n  ..   imdb_id = col_character(),\n  ..   title = col_character(),\n  ..   rating = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\nstr(raw_movies)\n\nspc_tbl_ [1,794 × 34] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ year         : num [1:1794] 2013 2012 2013 2013 2013 ...\n $ imdb         : chr [1:1794] \"tt1711425\" \"tt1343727\" \"tt2024544\" \"tt1272878\" ...\n $ title        : chr [1:1794] \"21 &amp; Over\" \"Dredd 3D\" \"12 Years a Slave\" \"2 Guns\" ...\n $ test         : chr [1:1794] \"notalk\" \"ok-disagree\" \"notalk-disagree\" \"notalk\" ...\n $ clean_test   : chr [1:1794] \"notalk\" \"ok\" \"notalk\" \"notalk\" ...\n $ binary       : chr [1:1794] \"FAIL\" \"PASS\" \"FAIL\" \"FAIL\" ...\n $ budget       : num [1:1794] 1.30e+07 4.50e+07 2.00e+07 6.10e+07 4.00e+07 2.25e+08 9.20e+07 1.20e+07 1.30e+07 1.30e+08 ...\n $ domgross     : chr [1:1794] \"25682380\" \"13414714\" \"53107035\" \"75612460\" ...\n $ intgross     : chr [1:1794] \"42195766\" \"40868994\" \"158607035\" \"132493015\" ...\n $ code         : chr [1:1794] \"2013FAIL\" \"2012PASS\" \"2013FAIL\" \"2013FAIL\" ...\n $ budget_2013  : num [1:1794] 13000000 45658735 20000000 61000000 40000000 ...\n $ domgross_2013: chr [1:1794] \"25682380\" \"13611086\" \"53107035\" \"75612460\" ...\n $ intgross_2013: chr [1:1794] \"42195766\" \"41467257\" \"158607035\" \"132493015\" ...\n $ period_code  : num [1:1794] 1 1 1 1 1 1 1 1 1 1 ...\n $ decade_code  : num [1:1794] 1 1 1 1 1 1 1 1 1 1 ...\n $ imdb_id      : chr [1:1794] \"1711425\" \"1343727\" \"2024544\" \"1272878\" ...\n $ plot         : chr [1:1794] NA NA \"In the antebellum United States, Solomon Northup, a free black man from upstate New York, is abducted and sold into slavery.\" \"A DEA agent and a naval intelligence officer find themselves on the run after a botched attempt to infiltrate a\"| __truncated__ ...\n $ rated        : chr [1:1794] NA NA \"R\" \"R\" ...\n $ response     : logi [1:1794] NA NA TRUE TRUE TRUE TRUE ...\n $ language     : chr [1:1794] NA NA \"English\" \"English, Spanish\" ...\n $ country      : chr [1:1794] NA NA \"USA, UK\" \"USA\" ...\n $ writer       : chr [1:1794] NA NA \"John Ridley (screenplay), Solomon Northup (based on \\\"Twelve Years a Slave\\\" by)\" \"Blake Masters (screenplay), Steven Grant (based on the Boom! Studios graphic novels by)\" ...\n $ metascore    : num [1:1794] NA NA 97 55 62 29 28 55 48 33 ...\n $ imdb_rating  : num [1:1794] NA NA 8.3 6.8 7.6 6.6 5.4 7.8 5.7 5 ...\n $ director     : chr [1:1794] NA NA \"Steve McQueen\" \"Baltasar Kormákur\" ...\n $ released     : chr [1:1794] NA NA \"08 Nov 2013\" \"02 Aug 2013\" ...\n $ actors       : chr [1:1794] NA NA \"Chiwetel Ejiofor, Dwight Henry, Dickie Gravois, Bryan Batt\" \"Denzel Washington, Mark Wahlberg, Paula Patton, Edward James Olmos\" ...\n $ genre        : chr [1:1794] NA NA \"Biography, Drama, History\" \"Action, Comedy, Crime\" ...\n $ awards       : chr [1:1794] NA NA \"Won 3 Oscars. Another 131 wins & 137 nominations.\" \"1 win.\" ...\n $ runtime      : chr [1:1794] NA NA \"134 min\" \"109 min\" ...\n $ type         : chr [1:1794] NA NA \"movie\" \"movie\" ...\n $ poster       : chr [1:1794] NA NA \"http://ia.media-imdb.com/images/M/MV5BMjExMTEzODkyN15BMl5BanBnXkFtZTcwNTU4NTc4OQ@@._V1_SX300.jpg\" \"http://ia.media-imdb.com/images/M/MV5BNTQ5MTgzNDg4OF5BMl5BanBnXkFtZTcwMjAyODEzOQ@@._V1_SX300.jpg\" ...\n $ imdb_votes   : num [1:1794] NA NA 143446 87301 43608 ...\n $ error        : logi [1:1794] NA NA NA NA NA NA ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   year = col_double(),\n  ..   imdb = col_character(),\n  ..   title = col_character(),\n  ..   test = col_character(),\n  ..   clean_test = col_character(),\n  ..   binary = col_character(),\n  ..   budget = col_double(),\n  ..   domgross = col_character(),\n  ..   intgross = col_character(),\n  ..   code = col_character(),\n  ..   budget_2013 = col_double(),\n  ..   domgross_2013 = col_character(),\n  ..   intgross_2013 = col_character(),\n  ..   period_code = col_double(),\n  ..   decade_code = col_double(),\n  ..   imdb_id = col_character(),\n  ..   plot = col_character(),\n  ..   rated = col_character(),\n  ..   response = col_logical(),\n  ..   language = col_character(),\n  ..   country = col_character(),\n  ..   writer = col_character(),\n  ..   metascore = col_double(),\n  ..   imdb_rating = col_double(),\n  ..   director = col_character(),\n  ..   released = col_character(),\n  ..   actors = col_character(),\n  ..   genre = col_character(),\n  ..   awards = col_character(),\n  ..   runtime = col_character(),\n  ..   type = col_character(),\n  ..   poster = col_character(),\n  ..   imdb_votes = col_number(),\n  ..   error = col_logical()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nData cleaning\nEDA"
  },
  {
    "objectID": "unfall.html",
    "href": "unfall.html",
    "title": "Unfall",
    "section": "",
    "text": "Setup\nDatenquelle: Unfallatlas.\n\nlibrary(tidyverse)\n\n\nfiles <- fs::dir_ls(\"./data/unfall/\", glob = \"*.csv\")\nmap(files, read_lines, n_max = 1)\n\n$`./data/unfall/Unfaelle_2016_LinRef.shp.csv`\n[1] \"X,Y,OBJECTID,ULAND,UREGBEZ,UKREIS,UGEMEINDE,UJAHR,UMONAT,USTUNDE,UWOCHENTAG,UKATEGORIE,UART,UTYP1,ULICHTVERH,IstStrasse,IstRad,IstPKW,IstFuss,IstKrad,IstGkfz,IstSonstig,LINREFX,LINREFY,XGCSWGS84,YGCSWGS84\"\n\n$`./data/unfall/Unfallorte2017_LinRef.shp.csv`\n[1] \"X,Y,OBJECTID,UIDENTSTLA,ULAND,UREGBEZ,UKREIS,UGEMEINDE,UJAHR,UMONAT,USTUNDE,UWOCHENTAG,UKATEGORIE,UART,UTYP1,IstRad,IstPKW,IstFuss,IstKrad,IstSonstig,LICHT,STRZUSTAND,LINREFX,LINREFY,XGCSWGS84,YGCSWGS84\"\n\n$`./data/unfall/Unfallorte2018_LinRef.shp.csv`\n[1] \"X,Y,ULAND,UREGBEZ,UKREIS,UGEMEINDE,UJAHR,UMONAT,USTUNDE,UWOCHENTAG,UKATEGORIE,UART,UTYP1,ULICHTVERH,IstRad,IstPKW,IstFuss,IstKrad,IstGkfz,IstSonstig,STRZUSTAND,LINREFX,LINREFY,XGCSWGS84,YGCSWGS84\"\n\n$`./data/unfall/Unfallorte2019_LinRef.shp.csv`\n[1] \"X,Y,OBJECTID,ULAND,UREGBEZ,UKREIS,UGEMEINDE,UJAHR,UMONAT,USTUNDE,UWOCHENTAG,UKATEGORIE,UART,UTYP1,ULICHTVERH,IstRad,IstPKW,IstFuss,IstKrad,IstGkfz,IstSonstig,LINREFX,LINREFY,XGCSWGS84,YGCSWGS84,STRZUSTAND\"\n\n$`./data/unfall/Unfallorte2020_LinRef.csv`\n[1] \"X,Y,OBJECTID,UIDENTSTLA,ULAND,UREGBEZ,UKREIS,UGEMEINDE,UJAHR,UMONAT,USTUNDE,UWOCHENTAG,UKATEGORIE,UART,UTYP1,ULICHTVERH,IstRad,IstPKW,IstFuss,IstKrad,IstGkfz,IstSonstig,LINREFX,LINREFY,XGCSWGS84,YGCSWGS84,STRZUSTAND\"\n\n\n\nread_lines(\"./data/unfall/Unfaelle_2016_LinRef.shp.csv\", n_max = 5)\n\n[1] \"X,Y,OBJECTID,ULAND,UREGBEZ,UKREIS,UGEMEINDE,UJAHR,UMONAT,USTUNDE,UWOCHENTAG,UKATEGORIE,UART,UTYP1,ULICHTVERH,IstStrasse,IstRad,IstPKW,IstFuss,IstKrad,IstGkfz,IstSonstig,LINREFX,LINREFY,XGCSWGS84,YGCSWGS84\"                  \n[2] \"606982.394,5954659.925,\\\"1\\\",\\\"01\\\",\\\"0\\\",\\\"53\\\",\\\"120\\\",\\\"2016\\\",\\\"01\\\",\\\"09\\\",\\\"5\\\",\\\"2\\\",\\\"8\\\",\\\"1\\\",\\\"0\\\",\\\"2\\\",\\\"0\\\",\\\"1\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",606982.39399999997,5954659.92499999981,10.62165932900,53.72961488800\"  \n[3] \"574882.533,6011440.851,\\\"2\\\",\\\"01\\\",\\\"0\\\",\\\"57\\\",\\\"010\\\",\\\"2016\\\",\\\"01\\\",\\\"17\\\",\\\"3\\\",\\\"3\\\",\\\"1\\\",\\\"6\\\",\\\"2\\\",\\\"1\\\",\\\"0\\\",\\\"1\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",574882.53300000005,6011440.85099999979,10.14917578300,54.24545258400\"  \n[4] \"599934.6875,5964608.5962,\\\"3\\\",\\\"01\\\",\\\"0\\\",\\\"62\\\",\\\"008\\\",\\\"2016\\\",\\\"01\\\",\\\"00\\\",\\\"5\\\",\\\"3\\\",\\\"9\\\",\\\"7\\\",\\\"2\\\",\\\"0\\\",\\\"0\\\",\\\"1\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",599934.68750000000,5964608.59619999956,10.51809434400,53.82040250500\"\n[5] \"610709.3487,5968284.2423,\\\"4\\\",\\\"01\\\",\\\"0\\\",\\\"03\\\",\\\"000\\\",\\\"2016\\\",\\\"01\\\",\\\"15\\\",\\\"5\\\",\\\"3\\\",\\\"5\\\",\\\"3\\\",\\\"0\\\",\\\"0\\\",\\\"1\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"1\\\",610709.34869999997,5968284.24230000004,10.68302070200,53.85124310100\"\n\n\n\nraw <- read_csv(\"./data/unfall/Unfaelle_2016_LinRef.shp.csv\")\nraw\n\n# A tibble: 151,673 × 26\n         X        Y OBJECTID ULAND UREGBEZ UKREIS UGEMEINDE UJAHR UMONAT USTUNDE\n     <dbl>    <dbl>    <dbl> <chr>   <dbl> <chr>  <chr>     <dbl> <chr>  <chr>  \n 1 606982. 5954660.        1 01          0 53     120        2016 01     09     \n 2 574883. 6011441.        2 01          0 57     010        2016 01     17     \n 3 599935. 5964609.        3 01          0 62     008        2016 01     00     \n 4 610709. 5968284.        4 01          0 03     000        2016 01     15     \n 5 605691. 6009152.        5 01          0 55     028        2016 01     14     \n 6 542547. 5963922.        6 01          0 61     044        2016 01     17     \n 7 558412. 5969890.        7 01          0 60     054        2016 01     17     \n 8 623912. 6008211.        8 01          0 55     029        2016 01     11     \n 9 579664. 5965471.        9 01          0 60     085        2016 01     16     \n10 494321. 6066810.       10 01          0 54     126        2016 01     10     \n# … with 151,663 more rows, and 16 more variables: UWOCHENTAG <dbl>,\n#   UKATEGORIE <dbl>, UART <dbl>, UTYP1 <dbl>, ULICHTVERH <dbl>,\n#   IstStrasse <dbl>, IstRad <dbl>, IstPKW <dbl>, IstFuss <dbl>, IstKrad <dbl>,\n#   IstGkfz <dbl>, IstSonstig <dbl>, LINREFX <dbl>, LINREFY <dbl>,\n#   XGCSWGS84 <dbl>, YGCSWGS84 <dbl>\n\n\n\naccidents <- raw |> \n  mutate(across(c(X,Y), ~ .x / 1e5 ))\n\n\nworld <- map_data(\"world\")\nworld |> \n  filter(region == \"Germany\") |> \n  ggplot(aes(long, lat, group = subregion)) +\n  geom_path() +\n  coord_map()\n\n\n\n\n\naccidents |> \n  ggplot(aes(X, Y, color = factor(ULAND))) +\n  geom_point() +\n  coord_map(projection = \"mercator\")\n\n\n\n\n\naccidents |> \n  count(ULAND)\n\n# A tibble: 8 × 2\n  ULAND     n\n  <chr> <int>\n1 01    11692\n2 02     7215\n3 04     2932\n4 06    19678\n5 07    13281\n6 08    33931\n7 09    50121\n8 14    12823\n\n\n\naccidents |> \n  filter(Y > 59) |> \n  select(ULAND, everything())\n\n# A tibble: 19,429 × 26\n   ULAND     X     Y OBJECTID UREGBEZ UKREIS UGEMEINDE UJAHR UMONAT USTUNDE\n   <chr> <dbl> <dbl>    <dbl>   <dbl> <chr>  <chr>     <dbl> <chr>  <chr>  \n 1 01     6.07  59.5        1       0 53     120        2016 01     09     \n 2 01     5.75  60.1        2       0 57     010        2016 01     17     \n 3 01     6.00  59.6        3       0 62     008        2016 01     00     \n 4 01     6.11  59.7        4       0 03     000        2016 01     15     \n 5 01     6.06  60.1        5       0 55     028        2016 01     14     \n 6 01     5.43  59.6        6       0 61     044        2016 01     17     \n 7 01     5.58  59.7        7       0 60     054        2016 01     17     \n 8 01     6.24  60.1        8       0 55     029        2016 01     11     \n 9 01     5.80  59.7        9       0 60     085        2016 01     16     \n10 01     4.94  60.7       10       0 54     126        2016 01     10     \n# … with 19,419 more rows, and 16 more variables: UWOCHENTAG <dbl>,\n#   UKATEGORIE <dbl>, UART <dbl>, UTYP1 <dbl>, ULICHTVERH <dbl>,\n#   IstStrasse <dbl>, IstRad <dbl>, IstPKW <dbl>, IstFuss <dbl>, IstKrad <dbl>,\n#   IstGkfz <dbl>, IstSonstig <dbl>, LINREFX <dbl>, LINREFY <dbl>,\n#   XGCSWGS84 <dbl>, YGCSWGS84 <dbl>\n\n\nData cleaning\nEDA"
  }
]